{"ast":null,"code":"// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.devices.Device', null, global);\ngoog.exportSymbol('proto.devices.DeviceListRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceListResponse', null, global);\ngoog.exportSymbol('proto.devices.DeviceUpdateRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceUpdateResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.Device = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.Device, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.Device.displayName = 'proto.devices.Device';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceUpdateRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceUpdateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceUpdateRequest.displayName = 'proto.devices.DeviceUpdateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceUpdateResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceUpdateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceUpdateResponse.displayName = 'proto.devices.DeviceUpdateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceListRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceListRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceListRequest.displayName = 'proto.devices.DeviceListRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceListResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.devices.DeviceListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.devices.DeviceListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceListResponse.displayName = 'proto.devices.DeviceListResponse';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.Device.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.Device.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.Device} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.Device.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        idVendor: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        idProduct: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        serial: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        action: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.Device}\n */\nproto.devices.Device.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.Device();\n  return proto.devices.Device.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.Device} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.Device}\n */\nproto.devices.Device.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setIdVendor(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setIdProduct(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setSerial(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setAction(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.Device.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.Device.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.Device} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.Device.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIdVendor();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getIdProduct();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getSerial();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getAction();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n\n/**\n * optional string id_vendor = 1;\n * @return {string}\n */\nproto.devices.Device.prototype.getIdVendor = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setIdVendor = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string id_product = 2;\n * @return {string}\n */\nproto.devices.Device.prototype.getIdProduct = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setIdProduct = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string serial = 3;\n * @return {string}\n */\nproto.devices.Device.prototype.getSerial = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setSerial = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string action = 4;\n * @return {string}\n */\nproto.devices.Device.prototype.getAction = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setAction = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceUpdateRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceUpdateRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceUpdateRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceUpdateRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        device: (f = msg.getDevice()) && proto.devices.Device.toObject(includeInstance, f)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceUpdateRequest}\n */\nproto.devices.DeviceUpdateRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceUpdateRequest();\n  return proto.devices.DeviceUpdateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceUpdateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceUpdateRequest}\n */\nproto.devices.DeviceUpdateRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.devices.Device();\n        reader.readMessage(value, proto.devices.Device.deserializeBinaryFromReader);\n        msg.setDevice(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceUpdateRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceUpdateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceUpdateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(1, f, proto.devices.Device.serializeBinaryToWriter);\n  }\n};\n\n/**\n * optional Device device = 1;\n * @return {?proto.devices.Device}\n */\nproto.devices.DeviceUpdateRequest.prototype.getDevice = function () {\n  return (/** @type{?proto.devices.Device} */\n    jspb.Message.getWrapperField(this, proto.devices.Device, 1)\n  );\n};\n\n/**\n * @param {?proto.devices.Device|undefined} value\n * @return {!proto.devices.DeviceUpdateRequest} returns this\n*/\nproto.devices.DeviceUpdateRequest.prototype.setDevice = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.devices.DeviceUpdateRequest} returns this\n */\nproto.devices.DeviceUpdateRequest.prototype.clearDevice = function () {\n  return this.setDevice(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.devices.DeviceUpdateRequest.prototype.hasDevice = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceUpdateResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceUpdateResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceUpdateResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceUpdateResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {};\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceUpdateResponse}\n */\nproto.devices.DeviceUpdateResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceUpdateResponse();\n  return proto.devices.DeviceUpdateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceUpdateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceUpdateResponse}\n */\nproto.devices.DeviceUpdateResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceUpdateResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceUpdateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceUpdateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceListRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceListRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceListRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceListRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {};\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceListRequest}\n */\nproto.devices.DeviceListRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceListRequest();\n  return proto.devices.DeviceListRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceListRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceListRequest}\n */\nproto.devices.DeviceListRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceListRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceListRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceListRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.devices.DeviceListResponse.repeatedFields_ = [1];\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceListResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceListResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceListResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceListResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        deviceList: jspb.Message.toObjectList(msg.getDeviceList(), proto.devices.Device.toObject, includeInstance)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceListResponse}\n */\nproto.devices.DeviceListResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceListResponse();\n  return proto.devices.DeviceListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceListResponse}\n */\nproto.devices.DeviceListResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.devices.Device();\n        reader.readMessage(value, proto.devices.Device.deserializeBinaryFromReader);\n        msg.addDevice(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceListResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDeviceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.devices.Device.serializeBinaryToWriter);\n  }\n};\n\n/**\n * repeated Device device = 1;\n * @return {!Array<!proto.devices.Device>}\n */\nproto.devices.DeviceListResponse.prototype.getDeviceList = function () {\n  return (/** @type{!Array<!proto.devices.Device>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.devices.Device, 1)\n  );\n};\n\n/**\n * @param {!Array<!proto.devices.Device>} value\n * @return {!proto.devices.DeviceListResponse} returns this\n*/\nproto.devices.DeviceListResponse.prototype.setDeviceList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n/**\n * @param {!proto.devices.Device=} opt_value\n * @param {number=} opt_index\n * @return {!proto.devices.Device}\n */\nproto.devices.DeviceListResponse.prototype.addDevice = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.devices.Device, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.devices.DeviceListResponse} returns this\n */\nproto.devices.DeviceListResponse.prototype.clearDeviceList = function () {\n  return this.setDeviceList([]);\n};\ngoog.object.extend(exports, proto.devices);","map":{"version":3,"names":["jspb","require","goog","global","Function","exportSymbol","proto","devices","Device","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","DeviceUpdateRequest","DeviceUpdateResponse","DeviceListRequest","DeviceListResponse","repeatedFields_","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","idVendor","getFieldWithDefault","idProduct","serial","action","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setIdVendor","setIdProduct","setSerial","setAction","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getIdVendor","length","writeString","getIdProduct","getSerial","getAction","setProto3StringField","device","getDevice","readMessage","setDevice","writeMessage","getWrapperField","setWrapperField","clearDevice","hasDevice","getField","deviceList","toObjectList","getDeviceList","addDevice","writeRepeatedMessage","getRepeatedWrapperField","setDeviceList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearDeviceList","object","extend","exports"],"sources":["/home/lg/workspace/discoverServer/frontEnd/src/pages/Devices/devicepb/device_pb.js"],"sourcesContent":["// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.devices.Device', null, global);\ngoog.exportSymbol('proto.devices.DeviceListRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceListResponse', null, global);\ngoog.exportSymbol('proto.devices.DeviceUpdateRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceUpdateResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.Device = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.Device, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.Device.displayName = 'proto.devices.Device';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceUpdateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceUpdateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceUpdateRequest.displayName = 'proto.devices.DeviceUpdateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceUpdateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceUpdateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceUpdateResponse.displayName = 'proto.devices.DeviceUpdateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceListRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceListRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceListRequest.displayName = 'proto.devices.DeviceListRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceListResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.devices.DeviceListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.devices.DeviceListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceListResponse.displayName = 'proto.devices.DeviceListResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.Device.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.Device.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.Device} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.Device.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    idVendor: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    idProduct: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    serial: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.Device}\n */\nproto.devices.Device.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.Device;\n  return proto.devices.Device.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.Device} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.Device}\n */\nproto.devices.Device.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdVendor(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdProduct(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSerial(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.Device.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.Device.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.Device} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.Device.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIdVendor();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIdProduct();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getSerial();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id_vendor = 1;\n * @return {string}\n */\nproto.devices.Device.prototype.getIdVendor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setIdVendor = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string id_product = 2;\n * @return {string}\n */\nproto.devices.Device.prototype.getIdProduct = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setIdProduct = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string serial = 3;\n * @return {string}\n */\nproto.devices.Device.prototype.getSerial = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setSerial = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string action = 4;\n * @return {string}\n */\nproto.devices.Device.prototype.getAction = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.devices.Device} returns this\n */\nproto.devices.Device.prototype.setAction = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceUpdateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceUpdateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceUpdateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    device: (f = msg.getDevice()) && proto.devices.Device.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceUpdateRequest}\n */\nproto.devices.DeviceUpdateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceUpdateRequest;\n  return proto.devices.DeviceUpdateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceUpdateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceUpdateRequest}\n */\nproto.devices.DeviceUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.devices.Device;\n      reader.readMessage(value,proto.devices.Device.deserializeBinaryFromReader);\n      msg.setDevice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceUpdateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceUpdateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceUpdateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.devices.Device.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Device device = 1;\n * @return {?proto.devices.Device}\n */\nproto.devices.DeviceUpdateRequest.prototype.getDevice = function() {\n  return /** @type{?proto.devices.Device} */ (\n    jspb.Message.getWrapperField(this, proto.devices.Device, 1));\n};\n\n\n/**\n * @param {?proto.devices.Device|undefined} value\n * @return {!proto.devices.DeviceUpdateRequest} returns this\n*/\nproto.devices.DeviceUpdateRequest.prototype.setDevice = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.devices.DeviceUpdateRequest} returns this\n */\nproto.devices.DeviceUpdateRequest.prototype.clearDevice = function() {\n  return this.setDevice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.devices.DeviceUpdateRequest.prototype.hasDevice = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceUpdateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceUpdateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceUpdateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceUpdateResponse}\n */\nproto.devices.DeviceUpdateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceUpdateResponse;\n  return proto.devices.DeviceUpdateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceUpdateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceUpdateResponse}\n */\nproto.devices.DeviceUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceUpdateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceUpdateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceUpdateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceUpdateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceListRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceListRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceListRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceListRequest}\n */\nproto.devices.DeviceListRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceListRequest;\n  return proto.devices.DeviceListRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceListRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceListRequest}\n */\nproto.devices.DeviceListRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceListRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceListRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceListRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.devices.DeviceListResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceListResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceListResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceListResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deviceList: jspb.Message.toObjectList(msg.getDeviceList(),\n    proto.devices.Device.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceListResponse}\n */\nproto.devices.DeviceListResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceListResponse;\n  return proto.devices.DeviceListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceListResponse}\n */\nproto.devices.DeviceListResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.devices.Device;\n      reader.readMessage(value,proto.devices.Device.deserializeBinaryFromReader);\n      msg.addDevice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceListResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceListResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDeviceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.devices.Device.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Device device = 1;\n * @return {!Array<!proto.devices.Device>}\n */\nproto.devices.DeviceListResponse.prototype.getDeviceList = function() {\n  return /** @type{!Array<!proto.devices.Device>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.devices.Device, 1));\n};\n\n\n/**\n * @param {!Array<!proto.devices.Device>} value\n * @return {!proto.devices.DeviceListResponse} returns this\n*/\nproto.devices.DeviceListResponse.prototype.setDeviceList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.devices.Device=} opt_value\n * @param {number=} opt_index\n * @return {!proto.devices.Device}\n */\nproto.devices.DeviceListResponse.prototype.addDevice = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.devices.Device, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.devices.DeviceListResponse} returns this\n */\nproto.devices.DeviceListResponse.prototype.clearDeviceList = function() {\n  return this.setDeviceList([]);\n};\n\n\ngoog.object.extend(exports, proto.devices);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}