{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for devices\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v3.12.4\n// source: device.proto\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.devices = require('./device_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.devices.DeviceServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.devices.DeviceServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.devices.DeviceUpdateRequest,\n *   !proto.devices.DeviceUpdateResponse>}\n */\nconst methodDescriptor_DeviceService_DeviceUpdate = new grpc.web.MethodDescriptor('/devices.DeviceService/DeviceUpdate', grpc.web.MethodType.UNARY, proto.devices.DeviceUpdateRequest, proto.devices.DeviceUpdateResponse,\n/**\n * @param {!proto.devices.DeviceUpdateRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.devices.DeviceUpdateResponse.deserializeBinary);\n\n/**\n * @param {!proto.devices.DeviceUpdateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.devices.DeviceUpdateResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceUpdateResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServiceClient.prototype.deviceUpdate = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/devices.DeviceService/DeviceUpdate', request, metadata || {}, methodDescriptor_DeviceService_DeviceUpdate, callback);\n};\n\n/**\n * @param {!proto.devices.DeviceUpdateRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.devices.DeviceUpdateResponse>}\n *     Promise that resolves to the response\n */\nproto.devices.DeviceServicePromiseClient.prototype.deviceUpdate = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/devices.DeviceService/DeviceUpdate', request, metadata || {}, methodDescriptor_DeviceService_DeviceUpdate);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.devices.DeviceListRequest,\n *   !proto.devices.DeviceListResponse>}\n */\nconst methodDescriptor_DeviceService_DeviceList = new grpc.web.MethodDescriptor('/devices.DeviceService/DeviceList', grpc.web.MethodType.SERVER_STREAMING, proto.devices.DeviceListRequest, proto.devices.DeviceListResponse,\n/**\n * @param {!proto.devices.DeviceListRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.devices.DeviceListResponse.deserializeBinary);\n\n/**\n * @param {!proto.devices.DeviceListRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceListResponse>}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServiceClient.prototype.deviceList = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/devices.DeviceService/DeviceList', request, metadata || {}, methodDescriptor_DeviceService_DeviceList);\n};\n\n/**\n * @param {!proto.devices.DeviceListRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceListResponse>}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServicePromiseClient.prototype.deviceList = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/devices.DeviceService/DeviceList', request, metadata || {}, methodDescriptor_DeviceService_DeviceList);\n};\nmodule.exports = proto.devices;","map":{"version":3,"names":["grpc","web","require","proto","devices","DeviceServiceClient","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","replace","DeviceServicePromiseClient","methodDescriptor_DeviceService_DeviceUpdate","MethodDescriptor","MethodType","UNARY","DeviceUpdateRequest","DeviceUpdateResponse","request","serializeBinary","deserializeBinary","prototype","deviceUpdate","metadata","callback","rpcCall","unaryCall","methodDescriptor_DeviceService_DeviceList","SERVER_STREAMING","DeviceListRequest","DeviceListResponse","deviceList","serverStreaming","module","exports"],"sources":["/home/lg/workspace/discoverServer/frontEnd/src/pages/Devices/devicepb/device_grpc_web_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for devices\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v3.12.4\n// source: device.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.devices = require('./device_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.devices.DeviceServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.devices.DeviceServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.devices.DeviceUpdateRequest,\n *   !proto.devices.DeviceUpdateResponse>}\n */\nconst methodDescriptor_DeviceService_DeviceUpdate = new grpc.web.MethodDescriptor(\n  '/devices.DeviceService/DeviceUpdate',\n  grpc.web.MethodType.UNARY,\n  proto.devices.DeviceUpdateRequest,\n  proto.devices.DeviceUpdateResponse,\n  /**\n   * @param {!proto.devices.DeviceUpdateRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.devices.DeviceUpdateResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.devices.DeviceUpdateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.devices.DeviceUpdateResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceUpdateResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServiceClient.prototype.deviceUpdate =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/devices.DeviceService/DeviceUpdate',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_DeviceUpdate,\n      callback);\n};\n\n\n/**\n * @param {!proto.devices.DeviceUpdateRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.devices.DeviceUpdateResponse>}\n *     Promise that resolves to the response\n */\nproto.devices.DeviceServicePromiseClient.prototype.deviceUpdate =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/devices.DeviceService/DeviceUpdate',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_DeviceUpdate);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.devices.DeviceListRequest,\n *   !proto.devices.DeviceListResponse>}\n */\nconst methodDescriptor_DeviceService_DeviceList = new grpc.web.MethodDescriptor(\n  '/devices.DeviceService/DeviceList',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.devices.DeviceListRequest,\n  proto.devices.DeviceListResponse,\n  /**\n   * @param {!proto.devices.DeviceListRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.devices.DeviceListResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.devices.DeviceListRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceListResponse>}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServiceClient.prototype.deviceList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/devices.DeviceService/DeviceList',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_DeviceList);\n};\n\n\n/**\n * @param {!proto.devices.DeviceListRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.devices.DeviceListResponse>}\n *     The XHR Node Readable Stream\n */\nproto.devices.DeviceServicePromiseClient.prototype.deviceList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/devices.DeviceService/DeviceList',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_DeviceList);\n};\n\n\nmodule.exports = proto.devices;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}