{"ast":null,"code":"// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.device.CreateRequest', null, global);\ngoog.exportSymbol('proto.device.Device', null, global);\ngoog.exportSymbol('proto.device.Empty', null, global);\ngoog.exportSymbol('proto.device.GetRequest', null, global);\ngoog.exportSymbol('proto.device.GetResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.Device = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.Device, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.Device.displayName = 'proto.device.Device';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.Empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.Empty.displayName = 'proto.device.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.CreateRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.CreateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.CreateRequest.displayName = 'proto.device.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.GetRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.GetRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.GetRequest.displayName = 'proto.device.GetRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.GetResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.GetResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.GetResponse.displayName = 'proto.device.GetResponse';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.device.Device.prototype.toObject = function (opt_includeInstance) {\n    return proto.device.Device.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.device.Device} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.device.Device.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        idVendor: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        idProduct: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        serial: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        connected: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.Device}\n */\nproto.device.Device.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.Device();\n  return proto.device.Device.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.Device} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.Device}\n */\nproto.device.Device.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setIdVendor(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setIdProduct(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setSerial(value);\n        break;\n      case 4:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setConnected(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.Device.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.device.Device.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.Device} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Device.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIdVendor();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getIdProduct();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getSerial();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getConnected();\n  if (f) {\n    writer.writeBool(4, f);\n  }\n};\n\n/**\n * optional string id_vendor = 1;\n * @return {string}\n */\nproto.device.Device.prototype.getIdVendor = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setIdVendor = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string id_product = 2;\n * @return {string}\n */\nproto.device.Device.prototype.getIdProduct = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setIdProduct = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string serial = 3;\n * @return {string}\n */\nproto.device.Device.prototype.getSerial = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setSerial = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional bool connected = 4;\n * @return {boolean}\n */\nproto.device.Device.prototype.getConnected = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setConnected = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.device.Empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.device.Empty.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.device.Empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.device.Empty.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {};\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.Empty}\n */\nproto.device.Empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.Empty();\n  return proto.device.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.Empty}\n */\nproto.device.Empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.Empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.device.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.device.CreateRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.device.CreateRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.device.CreateRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.device.CreateRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        device: (f = msg.getDevice()) && proto.device.Device.toObject(includeInstance, f)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.CreateRequest}\n */\nproto.device.CreateRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.CreateRequest();\n  return proto.device.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.CreateRequest}\n */\nproto.device.CreateRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.device.Device();\n        reader.readMessage(value, proto.device.Device.deserializeBinaryFromReader);\n        msg.setDevice(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.CreateRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.device.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.CreateRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(1, f, proto.device.Device.serializeBinaryToWriter);\n  }\n};\n\n/**\n * optional Device device = 1;\n * @return {?proto.device.Device}\n */\nproto.device.CreateRequest.prototype.getDevice = function () {\n  return (/** @type{?proto.device.Device} */\n    jspb.Message.getWrapperField(this, proto.device.Device, 1)\n  );\n};\n\n/**\n * @param {?proto.device.Device|undefined} value\n * @return {!proto.device.CreateRequest} returns this\n*/\nproto.device.CreateRequest.prototype.setDevice = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.device.CreateRequest} returns this\n */\nproto.device.CreateRequest.prototype.clearDevice = function () {\n  return this.setDevice(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.device.CreateRequest.prototype.hasDevice = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.device.GetRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.device.GetRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.device.GetRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.device.GetRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        deviceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.GetRequest}\n */\nproto.device.GetRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.GetRequest();\n  return proto.device.GetRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.GetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.GetRequest}\n */\nproto.device.GetRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setDeviceId(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.GetRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.device.GetRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.GetRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDeviceId();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n\n/**\n * optional string device_id = 1;\n * @return {string}\n */\nproto.device.GetRequest.prototype.getDeviceId = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.device.GetRequest} returns this\n */\nproto.device.GetRequest.prototype.setDeviceId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.device.GetResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.device.GetResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.device.GetResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.device.GetResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        device: (f = msg.getDevice()) && proto.device.Device.toObject(includeInstance, f)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.GetResponse}\n */\nproto.device.GetResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.GetResponse();\n  return proto.device.GetResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.GetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.GetResponse}\n */\nproto.device.GetResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.device.Device();\n        reader.readMessage(value, proto.device.Device.deserializeBinaryFromReader);\n        msg.setDevice(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.GetResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.device.GetResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.GetResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(1, f, proto.device.Device.serializeBinaryToWriter);\n  }\n};\n\n/**\n * optional Device device = 1;\n * @return {?proto.device.Device}\n */\nproto.device.GetResponse.prototype.getDevice = function () {\n  return (/** @type{?proto.device.Device} */\n    jspb.Message.getWrapperField(this, proto.device.Device, 1)\n  );\n};\n\n/**\n * @param {?proto.device.Device|undefined} value\n * @return {!proto.device.GetResponse} returns this\n*/\nproto.device.GetResponse.prototype.setDevice = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.device.GetResponse} returns this\n */\nproto.device.GetResponse.prototype.clearDevice = function () {\n  return this.setDevice(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.device.GetResponse.prototype.hasDevice = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\ngoog.object.extend(exports, proto.device);","map":{"version":3,"names":["jspb","require","goog","global","Function","exportSymbol","proto","device","Device","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Empty","CreateRequest","GetRequest","GetResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","idVendor","getFieldWithDefault","idProduct","serial","connected","getBooleanFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setIdVendor","setIdProduct","setSerial","readBool","setConnected","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getIdVendor","length","writeString","getIdProduct","getSerial","getConnected","writeBool","setProto3StringField","setProto3BooleanField","getDevice","readMessage","setDevice","writeMessage","getWrapperField","setWrapperField","clearDevice","hasDevice","getField","deviceId","setDeviceId","getDeviceId","object","extend","exports"],"sources":["/home/lg/workspace/discoverServer/frontEnd/src/devicepb/device_pb.js"],"sourcesContent":["// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.device.CreateRequest', null, global);\ngoog.exportSymbol('proto.device.Device', null, global);\ngoog.exportSymbol('proto.device.Empty', null, global);\ngoog.exportSymbol('proto.device.GetRequest', null, global);\ngoog.exportSymbol('proto.device.GetResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.Device = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.Device, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.Device.displayName = 'proto.device.Device';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.Empty.displayName = 'proto.device.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.CreateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.CreateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.CreateRequest.displayName = 'proto.device.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.GetRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.GetRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.GetRequest.displayName = 'proto.device.GetRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.device.GetResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.device.GetResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.device.GetResponse.displayName = 'proto.device.GetResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.device.Device.prototype.toObject = function(opt_includeInstance) {\n  return proto.device.Device.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.device.Device} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Device.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    idVendor: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    idProduct: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    serial: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    connected: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.Device}\n */\nproto.device.Device.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.Device;\n  return proto.device.Device.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.Device} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.Device}\n */\nproto.device.Device.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdVendor(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdProduct(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSerial(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setConnected(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.Device.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.device.Device.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.Device} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Device.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIdVendor();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIdProduct();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getSerial();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getConnected();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id_vendor = 1;\n * @return {string}\n */\nproto.device.Device.prototype.getIdVendor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setIdVendor = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string id_product = 2;\n * @return {string}\n */\nproto.device.Device.prototype.getIdProduct = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setIdProduct = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string serial = 3;\n * @return {string}\n */\nproto.device.Device.prototype.getSerial = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setSerial = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool connected = 4;\n * @return {boolean}\n */\nproto.device.Device.prototype.getConnected = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.device.Device} returns this\n */\nproto.device.Device.prototype.setConnected = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.device.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.device.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.device.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.Empty}\n */\nproto.device.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.Empty;\n  return proto.device.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.Empty}\n */\nproto.device.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.device.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.device.CreateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.device.CreateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.device.CreateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.CreateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    device: (f = msg.getDevice()) && proto.device.Device.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.CreateRequest}\n */\nproto.device.CreateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.CreateRequest;\n  return proto.device.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.CreateRequest}\n */\nproto.device.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.device.Device;\n      reader.readMessage(value,proto.device.Device.deserializeBinaryFromReader);\n      msg.setDevice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.CreateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.device.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.CreateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.device.Device.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Device device = 1;\n * @return {?proto.device.Device}\n */\nproto.device.CreateRequest.prototype.getDevice = function() {\n  return /** @type{?proto.device.Device} */ (\n    jspb.Message.getWrapperField(this, proto.device.Device, 1));\n};\n\n\n/**\n * @param {?proto.device.Device|undefined} value\n * @return {!proto.device.CreateRequest} returns this\n*/\nproto.device.CreateRequest.prototype.setDevice = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.device.CreateRequest} returns this\n */\nproto.device.CreateRequest.prototype.clearDevice = function() {\n  return this.setDevice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.device.CreateRequest.prototype.hasDevice = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.device.GetRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.device.GetRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.device.GetRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deviceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.GetRequest}\n */\nproto.device.GetRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.GetRequest;\n  return proto.device.GetRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.GetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.GetRequest}\n */\nproto.device.GetRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeviceId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.GetRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.device.GetRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.GetRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDeviceId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string device_id = 1;\n * @return {string}\n */\nproto.device.GetRequest.prototype.getDeviceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.device.GetRequest} returns this\n */\nproto.device.GetRequest.prototype.setDeviceId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.device.GetResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.device.GetResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.device.GetResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    device: (f = msg.getDevice()) && proto.device.Device.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.device.GetResponse}\n */\nproto.device.GetResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.device.GetResponse;\n  return proto.device.GetResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.device.GetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.device.GetResponse}\n */\nproto.device.GetResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.device.Device;\n      reader.readMessage(value,proto.device.Device.deserializeBinaryFromReader);\n      msg.setDevice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.device.GetResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.device.GetResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.device.GetResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.device.GetResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDevice();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.device.Device.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Device device = 1;\n * @return {?proto.device.Device}\n */\nproto.device.GetResponse.prototype.getDevice = function() {\n  return /** @type{?proto.device.Device} */ (\n    jspb.Message.getWrapperField(this, proto.device.Device, 1));\n};\n\n\n/**\n * @param {?proto.device.Device|undefined} value\n * @return {!proto.device.GetResponse} returns this\n*/\nproto.device.GetResponse.prototype.setDevice = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.device.GetResponse} returns this\n */\nproto.device.GetResponse.prototype.clearDevice = function() {\n  return this.setDevice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.device.GetResponse.prototype.hasDevice = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto.device);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}