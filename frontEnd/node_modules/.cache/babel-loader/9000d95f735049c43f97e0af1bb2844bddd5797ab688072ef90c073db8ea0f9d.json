{"ast":null,"code":"// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.devices.DeviceRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceRequest.displayName = 'proto.devices.DeviceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceResponse.displayName = 'proto.devices.DeviceResponse';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        deviceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceRequest}\n */\nproto.devices.DeviceRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceRequest();\n  return proto.devices.DeviceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceRequest}\n */\nproto.devices.DeviceRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setDeviceId(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDeviceId();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n\n/**\n * optional string device_id = 1;\n * @return {string}\n */\nproto.devices.DeviceRequest.prototype.getDeviceId = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.devices.DeviceRequest} returns this\n */\nproto.devices.DeviceRequest.prototype.setDeviceId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.devices.DeviceResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.devices.DeviceResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.devices.DeviceResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.devices.DeviceResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceResponse}\n */\nproto.devices.DeviceResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceResponse();\n  return proto.devices.DeviceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceResponse}\n */\nproto.devices.DeviceResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setStatus(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(1, f);\n  }\n};\n\n/**\n * optional bool status = 1;\n * @return {boolean}\n */\nproto.devices.DeviceResponse.prototype.getStatus = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.devices.DeviceResponse} returns this\n */\nproto.devices.DeviceResponse.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\ngoog.object.extend(exports, proto.devices);","map":{"version":3,"names":["jspb","require","goog","global","Function","exportSymbol","proto","devices","DeviceRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","DeviceResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","deviceId","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setDeviceId","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getDeviceId","length","writeString","setProto3StringField","status","getBooleanFieldWithDefault","readBool","setStatus","getStatus","writeBool","setProto3BooleanField","object","extend","exports"],"sources":["/home/lg/workspace/discoverServer/frontEnd/src/devicepb/device_pb.js"],"sourcesContent":["// source: device.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.devices.DeviceRequest', null, global);\ngoog.exportSymbol('proto.devices.DeviceResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceRequest.displayName = 'proto.devices.DeviceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.devices.DeviceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.devices.DeviceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.devices.DeviceResponse.displayName = 'proto.devices.DeviceResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deviceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceRequest}\n */\nproto.devices.DeviceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceRequest;\n  return proto.devices.DeviceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceRequest}\n */\nproto.devices.DeviceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeviceId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDeviceId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string device_id = 1;\n * @return {string}\n */\nproto.devices.DeviceRequest.prototype.getDeviceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.devices.DeviceRequest} returns this\n */\nproto.devices.DeviceRequest.prototype.setDeviceId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.devices.DeviceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.devices.DeviceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.devices.DeviceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.devices.DeviceResponse}\n */\nproto.devices.DeviceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.devices.DeviceResponse;\n  return proto.devices.DeviceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.devices.DeviceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.devices.DeviceResponse}\n */\nproto.devices.DeviceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.devices.DeviceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.devices.DeviceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.devices.DeviceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.devices.DeviceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool status = 1;\n * @return {boolean}\n */\nproto.devices.DeviceResponse.prototype.getStatus = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.devices.DeviceResponse} returns this\n */\nproto.devices.DeviceResponse.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.devices);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}