{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for device\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v3.12.4\n// source: device.proto\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.device = require('./device_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.device.DeviceServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.device.DeviceServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.device.CreateRequest,\n *   !proto.device.Empty>}\n */\nconst methodDescriptor_DeviceService_CreateDevice = new grpc.web.MethodDescriptor('/device.DeviceService/CreateDevice', grpc.web.MethodType.UNARY, proto.device.CreateRequest, proto.device.Empty,\n/**\n * @param {!proto.device.CreateRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.device.Empty.deserializeBinary);\n\n/**\n * @param {!proto.device.CreateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.device.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.device.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServiceClient.prototype.createDevice = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/device.DeviceService/CreateDevice', request, metadata || {}, methodDescriptor_DeviceService_CreateDevice, callback);\n};\n\n/**\n * @param {!proto.device.CreateRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.device.Empty>}\n *     Promise that resolves to the response\n */\nproto.device.DeviceServicePromiseClient.prototype.createDevice = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/device.DeviceService/CreateDevice', request, metadata || {}, methodDescriptor_DeviceService_CreateDevice);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.device.GetRequest,\n *   !proto.device.GetResponse>}\n */\nconst methodDescriptor_DeviceService_GetDevice = new grpc.web.MethodDescriptor('/device.DeviceService/GetDevice', grpc.web.MethodType.SERVER_STREAMING, proto.device.GetRequest, proto.device.GetResponse,\n/**\n * @param {!proto.device.GetRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.device.GetResponse.deserializeBinary);\n\n/**\n * @param {!proto.device.GetRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.device.GetResponse>}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServiceClient.prototype.getDevice = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/device.DeviceService/GetDevice', request, metadata || {}, methodDescriptor_DeviceService_GetDevice);\n};\n\n/**\n * @param {!proto.device.GetRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.device.GetResponse>}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServicePromiseClient.prototype.getDevice = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/device.DeviceService/GetDevice', request, metadata || {}, methodDescriptor_DeviceService_GetDevice);\n};\nmodule.exports = proto.device;","map":{"version":3,"names":["grpc","web","require","proto","device","DeviceServiceClient","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","replace","DeviceServicePromiseClient","methodDescriptor_DeviceService_CreateDevice","MethodDescriptor","MethodType","UNARY","CreateRequest","Empty","request","serializeBinary","deserializeBinary","prototype","createDevice","metadata","callback","rpcCall","unaryCall","methodDescriptor_DeviceService_GetDevice","SERVER_STREAMING","GetRequest","GetResponse","getDevice","serverStreaming","module","exports"],"sources":["/home/lg/workspace/discoverServer/frontEnd/src/devicepb/device_grpc_web_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for device\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v3.12.4\n// source: device.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.device = require('./device_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.device.DeviceServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.device.DeviceServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.device.CreateRequest,\n *   !proto.device.Empty>}\n */\nconst methodDescriptor_DeviceService_CreateDevice = new grpc.web.MethodDescriptor(\n  '/device.DeviceService/CreateDevice',\n  grpc.web.MethodType.UNARY,\n  proto.device.CreateRequest,\n  proto.device.Empty,\n  /**\n   * @param {!proto.device.CreateRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.device.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.device.CreateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.device.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.device.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServiceClient.prototype.createDevice =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/device.DeviceService/CreateDevice',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_CreateDevice,\n      callback);\n};\n\n\n/**\n * @param {!proto.device.CreateRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.device.Empty>}\n *     Promise that resolves to the response\n */\nproto.device.DeviceServicePromiseClient.prototype.createDevice =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/device.DeviceService/CreateDevice',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_CreateDevice);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.device.GetRequest,\n *   !proto.device.GetResponse>}\n */\nconst methodDescriptor_DeviceService_GetDevice = new grpc.web.MethodDescriptor(\n  '/device.DeviceService/GetDevice',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.device.GetRequest,\n  proto.device.GetResponse,\n  /**\n   * @param {!proto.device.GetRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.device.GetResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.device.GetRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.device.GetResponse>}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServiceClient.prototype.getDevice =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/device.DeviceService/GetDevice',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_GetDevice);\n};\n\n\n/**\n * @param {!proto.device.GetRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.device.GetResponse>}\n *     The XHR Node Readable Stream\n */\nproto.device.DeviceServicePromiseClient.prototype.getDevice =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/device.DeviceService/GetDevice',\n      request,\n      metadata || {},\n      methodDescriptor_DeviceService_GetDevice);\n};\n\n\nmodule.exports = proto.device;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAIA,MAAMA,IAAI,GAAG,CAAC,CAAC;AACfA,IAAI,CAACC,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE9B,MAAMC,KAAK,GAAG,CAAC,CAAC;AAChBA,KAAK,CAACC,MAAM,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,KAAK,CAACC,MAAM,CAACC,mBAAmB,GAC5B,UAASC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3C,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;EAC1BA,OAAO,CAACC,MAAM,GAAG,MAAM;;EAEvB;AACF;AACA;EACE,IAAI,CAACC,OAAO,GAAG,IAAIV,IAAI,CAACC,GAAG,CAACU,iBAAiB,CAACH,OAAO,CAAC;;EAEtD;AACF;AACA;EACE,IAAI,CAACI,SAAS,GAAGN,QAAQ,CAACO,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAE/C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,KAAK,CAACC,MAAM,CAACU,0BAA0B,GACnC,UAASR,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3C,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;EAC1BA,OAAO,CAACC,MAAM,GAAG,MAAM;;EAEvB;AACF;AACA;EACE,IAAI,CAACC,OAAO,GAAG,IAAIV,IAAI,CAACC,GAAG,CAACU,iBAAiB,CAACH,OAAO,CAAC;;EAEtD;AACF;AACA;EACE,IAAI,CAACI,SAAS,GAAGN,QAAQ,CAACO,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAE/C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,2CAA2C,GAAG,IAAIf,IAAI,CAACC,GAAG,CAACe,gBAAgB,CAC/E,oCAAoC,EACpChB,IAAI,CAACC,GAAG,CAACgB,UAAU,CAACC,KAAK,EACzBf,KAAK,CAACC,MAAM,CAACe,aAAa,EAC1BhB,KAAK,CAACC,MAAM,CAACgB,KAAK;AAClB;AACF;AACA;AACA;AACE,UAASC,OAAO,EAAE;EAChB,OAAOA,OAAO,CAACC,eAAe,EAAE;AAClC,CAAC,EACDnB,KAAK,CAACC,MAAM,CAACgB,KAAK,CAACG,iBAAiB,CACrC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,KAAK,CAACC,MAAM,CAACC,mBAAmB,CAACmB,SAAS,CAACC,YAAY,GACnD,UAASJ,OAAO,EAAEK,QAAQ,EAAEC,QAAQ,EAAE;EACxC,OAAO,IAAI,CAACjB,OAAO,CAACkB,OAAO,CAAC,IAAI,CAAChB,SAAS,GACtC,oCAAoC,EACpCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdX,2CAA2C,EAC3CY,QAAQ,CAAC;AACf,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,KAAK,CAACC,MAAM,CAACU,0BAA0B,CAACU,SAAS,CAACC,YAAY,GAC1D,UAASJ,OAAO,EAAEK,QAAQ,EAAE;EAC9B,OAAO,IAAI,CAAChB,OAAO,CAACmB,SAAS,CAAC,IAAI,CAACjB,SAAS,GACxC,oCAAoC,EACpCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdX,2CAA2C,CAAC;AAClD,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMe,wCAAwC,GAAG,IAAI9B,IAAI,CAACC,GAAG,CAACe,gBAAgB,CAC5E,iCAAiC,EACjChB,IAAI,CAACC,GAAG,CAACgB,UAAU,CAACc,gBAAgB,EACpC5B,KAAK,CAACC,MAAM,CAAC4B,UAAU,EACvB7B,KAAK,CAACC,MAAM,CAAC6B,WAAW;AACxB;AACF;AACA;AACA;AACE,UAASZ,OAAO,EAAE;EAChB,OAAOA,OAAO,CAACC,eAAe,EAAE;AAClC,CAAC,EACDnB,KAAK,CAACC,MAAM,CAAC6B,WAAW,CAACV,iBAAiB,CAC3C;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,KAAK,CAACC,MAAM,CAACC,mBAAmB,CAACmB,SAAS,CAACU,SAAS,GAChD,UAASb,OAAO,EAAEK,QAAQ,EAAE;EAC9B,OAAO,IAAI,CAAChB,OAAO,CAACyB,eAAe,CAAC,IAAI,CAACvB,SAAS,GAC9C,iCAAiC,EACjCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdI,wCAAwC,CAAC;AAC/C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA3B,KAAK,CAACC,MAAM,CAACU,0BAA0B,CAACU,SAAS,CAACU,SAAS,GACvD,UAASb,OAAO,EAAEK,QAAQ,EAAE;EAC9B,OAAO,IAAI,CAAChB,OAAO,CAACyB,eAAe,CAAC,IAAI,CAACvB,SAAS,GAC9C,iCAAiC,EACjCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdI,wCAAwC,CAAC;AAC/C,CAAC;AAGDM,MAAM,CAACC,OAAO,GAAGlC,KAAK,CAACC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}